{"ast":null,"code":"import { createSlice, createAsyncThunk, configureStore } from '@reduxjs/toolkit';\nimport axios from 'axios';\nconst URL = 'http://localhost:3001/posts';\nconst initialStatePosts = {\n  posts: [],\n  status: 'idle',\n  error: null\n};\nexport const fetchPosts = createAsyncThunk('posts/fetchPosts', async () => {\n  try {\n    const response = await axios.get(URL);\n    return [...response.data];\n  } catch (error) {\n    return error.message;\n  }\n});\nexport const createPost = createAsyncThunk('posts/createPost', async post => {\n  try {\n    const response = await axios.post(URL, post);\n    return response.data;\n  } catch (error) {\n    return error.message;\n  }\n});\nexport const deletePost = createAsyncThunk('posts/deletePost', async id => {\n  try {\n    const response = await axios.delete(`${URL}/${id}`);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n});\nconst postsSlice = createSlice({\n  name: 'posts',\n  initialState: initialStatePosts,\n  reducers: {\n    crearPost: (state, action) => {\n      state.posts.push(action.payload);\n    }\n  },\n  extraReducers(builder) {\n    builder.addCase(fetchPosts.pending, (state, action) => {\n      state.status = 'loading';\n    }).addCase(fetchPosts.fulfilled, (state, action) => {\n      state.status = 'succeeded';\n      state.posts = action.payload;\n    }).addCase(fetchPosts.rejected, (state, action) => {\n      state.status = 'failed';\n      state.error = action.error.message;\n    }).addCase(createPost.fulfilled, (state, action) => {\n      state.status = 'succeeded';\n      state.posts.push(action.payload);\n    }).addCase(deletePost.fulfilled, (state, action) => {\n      state.status = 'succeeded';\n      if (state.status === 'succeeded') {\n        state.posts = state.posts.filter(post => post.id !== action.payload.id);\n      }\n    });\n  }\n});\nconst initialStateFilter = {\n  filter: ''\n};\nconst filterSlice = createSlice({\n  name: 'filter',\n  initialState: initialStateFilter,\n  reducers: {\n    addFilter: (state, action) => {\n      state.filter = action.payload;\n    }\n  }\n});\nexport const store = configureStore({\n  reducer: {\n    posts: postsSlice.reducer,\n    filter: filterSlice.reducer\n  }\n});\nexport const {\n  addFilter\n} = filterSlice.actions;\nexport const selectAllPosts = state => state.posts.posts;\nexport const getPostsStatus = state => state.posts.status;\nexport const getPostsError = state => state.posts.error;","map":{"version":3,"names":["createSlice","createAsyncThunk","configureStore","axios","URL","initialStatePosts","posts","status","error","fetchPosts","response","get","data","message","createPost","post","deletePost","id","delete","console","log","postsSlice","name","initialState","reducers","crearPost","state","action","push","payload","extraReducers","builder","addCase","pending","fulfilled","rejected","filter","initialStateFilter","filterSlice","addFilter","store","reducer","actions","selectAllPosts","getPostsStatus","getPostsError"],"sources":["/Users/matias/Documents/Postulacion_trabajo/Pruebas/TCIT/carpeta sin título/client/src/store.js"],"sourcesContent":["import {createSlice, createAsyncThunk, configureStore} from '@reduxjs/toolkit'\nimport axios from 'axios'\n\nconst URL = 'http://localhost:3001/posts'\n\nconst initialStatePosts = {\n    posts: [],\n    status: 'idle',\n    error: null\n}\n\nexport const fetchPosts = createAsyncThunk('posts/fetchPosts', async ()=>{\n    try {\n        const response = await axios.get(URL)\n        return [...response.data]\n    } catch (error) {\n        return error.message\n    }\n}) \n\nexport const createPost = createAsyncThunk('posts/createPost', async (post)=>{\n    try {\n        const response = await axios.post(URL, post)\n        return response.data\n    } catch (error) {\n        return error.message\n    }\n})\n\nexport const deletePost = createAsyncThunk('posts/deletePost', async (id) =>{\n    try {\n        const response = await axios.delete(`${URL}/${id}`)\n        return response.data\n    } catch (error) {\n        console.log(error)\n    }\n})\n\nconst postsSlice = createSlice({\n    name: 'posts',\n    initialState: initialStatePosts,\n    reducers: {\n        crearPost: (state,action) => {\n            state.posts.push(action.payload)\n        }\n    },\n    extraReducers(builder){\n        builder\n            .addCase(fetchPosts.pending, (state, action)=>{\n                state.status = 'loading'\n            })\n            .addCase(fetchPosts.fulfilled, (state, action)=>{\n                state.status = 'succeeded'\n                state.posts = action.payload\n            })\n            .addCase(fetchPosts.rejected, (state, action)=>{\n                state.status = 'failed'\n                state.error = action.error.message\n            })\n            .addCase(createPost.fulfilled, (state, action) =>{\n                state.status = 'succeeded'\n                state.posts.push(action.payload)\n            })\n            .addCase(deletePost.fulfilled, (state, action)=>{\n                state.status = 'succeeded'\n                if(state.status === 'succeeded'){\n                    state.posts = state.posts.filter((post)=> post.id !== action.payload.id)\n                }\n            })\n    }\n})\n\nconst initialStateFilter = {\n    filter: ''\n}\n\nconst filterSlice = createSlice({\n    name: 'filter',\n    initialState: initialStateFilter,\n    reducers: {\n        addFilter: (state,action) => {\n            state.filter = action.payload\n        },\n    },\n})\n\nexport const store = configureStore({\n    reducer: {\n        posts: postsSlice.reducer,\n        filter: filterSlice.reducer\n    }\n})\n\n\nexport const { addFilter } = filterSlice.actions\n\nexport const selectAllPosts = (state) => state.posts.posts\nexport const getPostsStatus = (state) => state.posts.status\nexport const getPostsError = (state) => state.posts.error"],"mappings":"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"},"metadata":{},"sourceType":"module"}