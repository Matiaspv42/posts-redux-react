{"ast":null,"code":"import { createSlice, createAsyncThunk, configureStore } from '@reduxjs/toolkit';\nimport axios from 'axios';\nconst URL = 'http://localhost:3001/posts';\nconst initialState = {\n  posts: [],\n  status: 'idle',\n  error: null\n};\nexport const fetchPosts = createAsyncThunk('posts/fetchPosts', async () => {\n  try {\n    const response = await axios.get(URL);\n    return [...response.data];\n  } catch (error) {\n    return error.message;\n  }\n});\nexport const createPost = createAsyncThunk('posts/createPost', async post => {\n  try {\n    const response = await axios.post(URL, post);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n    return error.message;\n  }\n});\nexport const deletePost = createAsyncThunk('posts/deletePost', async id => {\n  try {\n    console.log(id);\n    const response = await axios.delete(`${URL}/${id}`);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n});\nconst postsSlice = createSlice({\n  name: 'posts',\n  initialState,\n  reducers: {\n    crearPost: (state, action) => {\n      state.posts.push(action.payload);\n    }\n  },\n  extraReducers(builder) {\n    builder.addCase(fetchPosts.pending, (state, action) => {\n      state.status = 'loading';\n    }).addCase(fetchPosts.fulfilled, (state, action) => {\n      state.status = 'succeeded';\n      state.posts = action.payload;\n    }).addCase(fetchPosts.rejected, (state, action) => {\n      state.status = 'failed';\n      state.error = action.error.message;\n    }).addCase(createPost.fulfilled, (state, action) => {\n      state.status = 'succeeded';\n      state.posts.push(action.payload);\n    }).addCase(deletePost.fulfilled, (state, action) => {\n      state.status = 'succeeded';\n      if (state.status == 'succeeded') {\n        state.posts = state.posts.filter(post => post.id !== action.payload.id);\n      }\n    });\n  }\n});\nexport const store = configureStore({\n  reducer: {\n    posts: postsSlice.reducer\n  }\n});\nexport const selectAllPosts = state => state.posts.posts;\nexport const getPostsStatus = state => state.posts.status;\nexport const getPostsError = state => state.posts.error;","map":{"version":3,"names":["createSlice","createAsyncThunk","configureStore","axios","URL","initialState","posts","status","error","fetchPosts","response","get","data","message","createPost","post","console","log","deletePost","id","delete","postsSlice","name","reducers","crearPost","state","action","push","payload","extraReducers","builder","addCase","pending","fulfilled","rejected","filter","store","reducer","selectAllPosts","getPostsStatus","getPostsError"],"sources":["/Users/matias/Documents/Postulacion_trabajo/Pruebas/TCIT/postss/client/src/store.js"],"sourcesContent":["import {createSlice, createAsyncThunk, configureStore} from '@reduxjs/toolkit'\nimport axios from 'axios'\n\nconst URL = 'http://localhost:3001/posts'\n\nconst initialState = {\n    posts: [],\n    status: 'idle',\n    error: null\n}\n\nexport const fetchPosts = createAsyncThunk('posts/fetchPosts', async ()=>{\n    try {\n        const response = await axios.get(URL)\n        return [...response.data]\n    } catch (error) {\n        return error.message\n    }\n}) \n\nexport const createPost = createAsyncThunk('posts/createPost', async (post)=>{\n    try {\n        const response = await axios.post(URL, post)\n        return response.data\n    } catch (error) {\n        console.log(error)\n        return error.message\n    }\n})\n\nexport const deletePost = createAsyncThunk('posts/deletePost', async (id) =>{\n    try {\n        console.log(id)\n        const response = await axios.delete(`${URL}/${id}`)\n\n        return response.data\n    } catch (error) {\n        console.log(error)\n    }\n})\n\nconst postsSlice = createSlice({\n    name: 'posts',\n    initialState,\n    reducers: {\n        crearPost: (state,action) => {\n            state.posts.push(action.payload)\n        }\n    },\n    extraReducers(builder){\n        builder\n            .addCase(fetchPosts.pending, (state, action)=>{\n                state.status = 'loading'\n            })\n            .addCase(fetchPosts.fulfilled, (state, action)=>{\n                state.status = 'succeeded'\n                state.posts = action.payload\n            })\n            .addCase(fetchPosts.rejected, (state, action)=>{\n                state.status = 'failed'\n                state.error = action.error.message\n            })\n            .addCase(createPost.fulfilled, (state, action) =>{\n                state.status = 'succeeded'\n                state.posts.push(action.payload)\n            })\n            .addCase(deletePost.fulfilled, (state, action)=>{\n                state.status = 'succeeded'\n                if(state.status == 'succeeded'){\n                    state.posts = state.posts.filter((post)=> post.id !== action.payload.id)\n                }\n            })\n    }\n})\n\nexport const store = configureStore({\n    reducer: {\n        posts: postsSlice.reducer\n    }\n})\n\nexport const selectAllPosts = (state) => state.posts.posts\nexport const getPostsStatus = (state) => state.posts.status\nexport const getPostsError = (state) => state.posts.error"],"mappings":"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"},"metadata":{},"sourceType":"module"}